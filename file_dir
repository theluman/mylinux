ls
  -l：长格式
    文件类型：
       -：普通文件
       d: 目录文件
       b: 块设备文件(block)
       c: 字符设备文件(character)
       l: 符号链接文件(symbolic link)
       p: 命令管道文件(pipe)
       s: 套接字文件(socket)
    -rw-rw-r--. 1 chao chao   376 Nov 19 08:39 stdout_in_err
    文件权限：9位，ugo,rwx
    文件硬链接的次数
    文件的属主
    文件的属组
    文件的大小，默认单位是字节
    时间戳(timestamp): 默认显示最近一次被修改的时间
    文件名
  -h: 做单位转换，人类易读的单位
  -a: 显示以.开头的隐藏文件
      . 当前目录
      .. 父目录
  -A: 显示以.开头的文件，但不显示.和..这两个文件
  -d: 显示目录自身属性
  -i: index node,inode号
  -r: 逆序显示
  -R: 递归显示

cd
  ~/username: username的家目录
  -: 在当前目录和上一个目录来回切换

pwd

mkdir 创建空目录
  -p 递归创建父目录
  -v 显示详细信息
命令行展开
mkdir -pv /mnt/test/{x/m,y}
(a+d)(b+c)=ab+ac+db+dc
{a,d}_{b,c}    

tree查看目录树

删除目录 
  rmdir 删除空目录
  rm
    -r
    -f
    -i

touch
  -a
  -m
  -t
  -c
file,type,stat

cp
 cp source dest
 一个文件到一个文件
 多个文件到一个目录
  -r || -R  递归复制
  -i 提示
  -f 强制覆盖
  -p 保持文件原有属性
  -a 归档，冲用于备份

mv source dest
mv -t dest source

tar
压缩解压缩：
压缩格式 gz,bz2,xz,zip,z
压缩算法：算法不同，压缩比也会不同
gzip: .gz    
  gzip /PATH/TO/SOMEFILE  压缩后会删除源文件
  gunzip /PATH/TO/SOMEFILE.gz 解压缩
  zact /PATH/TO/SOMEFILE.gz 不解压缩的情况下查看文本文件内容

bzip2: .bz2 比gzip有更大的压缩比 对大文件有优势，小文件没优势
  bzip2 /PATH/TO/SOMEFILE
  -k 保留源文件不删除
  bunzip2 /PATH/TO/SOMEFILE.bz2
  bzcat

xz: xz
  xz /PATH/TO/SOMEFILE
  -k
  unxz 
  zxcat

zip: .zip 既归档又压缩
  zip FILENAME.zip FILE1 FILE2 ... 压缩后默认不删除源文件
  unzip FILENAME.zip

多个文件整合在一次功能叫 archive 归档，归档并不意味压缩

tar本身只归档，不压缩
tar
 -c 创建归档文件
 -f FILE.tar 指定归档后文件名
 -x 展开归档
 --xattrs 归档时保留文件的扩展属性信息
 -t 不展开归档查看归档了哪些内容
 -v 显示详细内容
-z : 调用zip
tar -zcf filename.gz 归档并调用zip压缩
    -zxf filename.gz 解压缩并展开归档

-j 调用 bzip2
tar -jcf filename.bz2   
tar -jzf filename.bz2  

-J xz
tar -Jcf filename.xz  
tar -Jxf filename.xz

cpio 归档工具 古老

find
文件查找
locate
find

locate
 查找非实时的，查找是根据系统文件数据库进行的
 模糊查找，非精确匹配
updatedb 手动生成文件数据库，生成时间很长
速度快，不常用

find
  实时查找
  精确
  速度慢，遍历指定目录中所有文件完成查找，速度慢
  支持许多种查找标准，基于正则匹配文件

find 查找路径 查找标准 查找到以后的处理动作
查找路径默认为当前目录
查找标准默认为指定路径下的所有文件
处理标准默认为打印到屏幕
find / -name 'dean'
匹配标准
 -name 'FILENAME' 文件名精确匹配
     支持文件名通配
         *
         ？
         []
 -iname 'FILENAME' 文件名匹配不区分大小写
 -user USERNAME 根据属主查找，显示属主是USERNAME的文件
 -group GROUPNAME
 -uid uid
 -gid gid
 -nouser 查找没有属主的文件
 -nogroup 查找没有属组的文件
 -type 根据文件类型查找
   f 文件
   d 目录
   c
   b
   l
   p
   s
find /  -not -type d
  -size [+|-] 根据文件大小
    #k
    #M
    #G
组合条件
  -a 与
  -o 或
  -not 非
两个条件默认是与条件
  -mtime 内容修改 天数
  -ctime 属性修改 天数
  -atime 访问     天数
      [+|-] # +表示多长时间前，-表示多长时间内 不+不-表示正好卡住这个时间点
  -mmin         分钟数
      [+|-] #
  -cmin         分钟数
      [+|-] #
  -amin         分钟数
      [+|-] #

  -perm MODE 根据权限查找
       MODE 9位每一位必须精确匹配 644 <--> 644
       -MODE 文件权限能完全包含此MODE
       /MODE 9位中有一位匹配就算数 600 <--> 644
动作：
  -print 默认是显示
  -ls 类似ls -l 的形式显示每一个文件的详细信息
  -ok COMMAND {} \; 每一次操作都需要确认
  -exec COMMAND {} \; 操作不需要确认
       find -perm -020 -exec mv {} {}.new \;
  
xargs
find /etc -size +1M -exec echo {} >> /tmp/etc.largefiles \;
find /etc -size +1M |xargs echo >> /tmp/etc.largefiles

ln 链接,无论硬链接，软连接，都不会把源文件复制
ln [-s -v] source dest  都使用绝对路径

  ln 默认是创建硬链接，硬链接指向同一个inode号，硬链接如果大于2，删除其中一个硬链接，文件依然存在，硬链接只能对文件创建，不能用于目录，不能跨文件系统
  ln -s 创建软连接，类似快捷方式，软连接不指向同一个inode号，是两个文件，删除快捷方式，不会影响源文件，删除源文件，快捷方式也就出错了，标红，文件损坏，链接文件指向的是源文件的路径字符串，而不是inode,损坏的文件，可以通过添加源文件修复
    软连接可用于目录，可以跨文件系统，不会增加被连接的链接次数，其大小为指定的路径所包含的字符个数
    -f 强行删除与dist同名的文档
    -d  允许系统管理员硬链接自己的目录
    -i  在删除与dist同名的档案时先询问
   -n 在进行软连接时，将dist视为一般的档案
   -v  在链接之前显示文档名
   -b  将在连接时会被覆盖或删除的文档备份
  -S SUFFIX 将备份的文档都加上SUFFIX字尾

du 磁盘文件占用空间大小
  -s 整个目录大小
  -h

df 显示分区使用情况
  df -h 换算单位
  df -i 显示inode
     -P 不换行显示

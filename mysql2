mysql
sql语句
事务，隔离，并发控制，锁
用户和权限
监控
  status
索引类型：查询
  variables
备份和恢复
复制功能
集群

RDBMS 关系型数据库
 关系模型（结构化数据模型）
    关系模型
    实体-关系模型
    对象关系模型：基于对象的数据模型
    半结构化数据模型：xml(扩展标记语言)
 关系：关系代数运算
    交集 并集 差集 全集 补集
SQL:结构化查询语句
 DML 数据操纵语言
   insert delete select update
 DDL 数据定义语言
   create drop alter
 DCL：数据控制语言
   grant revoke

RDB对象：
  库、表、索引、视图、用户、存储过程、存储函数、触发器、事件调度器  
约束：(存储范围，有效数据范围)
  域约束：数据类型约束
  外键约束：引用完整性约束
  主键约束：某字段能唯一标识此字段所属的实体，并且不允许为空
     一张表中只能有一个主键
  唯一性约束：每一行的某字段都不允许出现重复值，可以为空
    一张表中可以有多个唯一键
  检查性约束：age:int  比如约束年龄范围大于0小于150

关系型数据层次
  表示层：库，表，索引，视图，用户
  逻辑层: 存储引擎
  物理层：数据文件
数据存储和查询
  存储管理器
    权限及完整性管理
    事务管理器
    文件管理器
    缓冲区管理器
  查询管理器
    DML解释器
    DDL解释器
    DCL解释器
    查询执行引擎
mysql：
  每一个用户连接生成一个独立的线程
  单进程
    多线程
      守护线程（mysql自动执行任务使用的线程）
      应用线程（用户线程）

32bit:2.7G
64bit:
smp :多对称处理器，mysql对多处理器利用不好

关系运算：
 投影：只输出指定字段
 选择：只输出符合条件的行
 自然连接：具有相同名字的属性上所有取值相同的行
 笛卡尔乘积：(a+b)*(c+d)=ac+ad+bc+bd
 并：集合运算

SQL查询语句：
  sequl -->SQL
  sql-86
  sql-89
  sql-92
  sql-99
  sql-03
  sql-08
SQL 语言的组成部分
  DDL
  DML
  完整性定义语言 DDL的一部分功能
  视图定义
  事务控制
  嵌入式SQL和动态SQL
  DCL:授权相关
使用程序设计语言如何跟RDBMS交互：
  嵌入式SQL:与动态sql类似，但是其语句必须在程序编译时完全确定下来，并由预处理器处理
    ODBC
  动态SQL:程序设计语言使用函数(mysql_connect()) 或者方法与RDBMS服务器建立连接，并进行交互通过建立的连接想服务器发送查询语句，并将结果保存至变量中而后进行处理
    JDBC
mysql基本组织结构：（mysql是插件式存储引擎）
连接管理器
线程管理器
用户模块
缓存  命令分发模块  日志模块
解析器
优化器 表定义模块 表维护模块 复制模块 状态报告模块
访问控制模块
表管理器
存储引擎
磁盘文件

插件式存储引擎
5.5.8默认： MyISAM 不支持事务，性能好，查询修改比较多的，适用于数据仓库
5.5.8后默认： InnoDB 支持事务，适用于在线事务处理系统

表管理器： 负责创建、读取或修改表定义文件：维护表描述符高速缓存:管理表锁
  表结构定义文件
表修改模块：创建表，删除，重命名，移除，更新，插入之类操作
表维护模块：检查、修改、备份、恢复、优化（碎片整理）及解析

行：定长，变长（定长查询速度快，非必要不用变长）
文件中记录组织：
  堆文件组织：一条记录可以放在文件中的任何地方
  顺序文件组织：根据"所搜码"值顺序排序存放
  散列文件组织：哈希算法，桶管理
表结构定义文件，表数据文件
表空间：table space,按需增长，跨表存储

数据字典
  关系的元数据
    关系的名字
    字段名字
    字段的类型和长度
    视图
    完整性约束
    用户名字，授权，密码

缓冲区管理器
  缓存置换策略
  被盯住的块
  最近最少策略
  
mysql
 完全多线程
 查询缓存

mysql产品家族
 mysql server(mysqld,mysql)
 mysql Cluster  mysql集群，将多个mysql服务器组织起来
 mysql proxy    mysql代理，命令分发，读写分离使用
 mysql Adminitrator mysql可视化gui管理工具
 mysql Query Brower 查询浏览器
 mysql Workbench  数据库设计工具
 mysql Migration toolkit 移植工具箱跨平台移植
 mysql embedded server  嵌入式使用的
 mysql drivers and connectors 驱动连接器

mysql mariadb 
percona

mysql安装
  专用软件包管理器包
  deb,rpm
  rpm:
    rhel
    suse
  通用二进制包
    gcc
  源代码
    5.5 5.6后不支持make,使用cmake,原因是能跨平台
       cmake 编译

版本 
GA   发行版
RC   发行候选
beta 公测
alpha 内侧

mysql-client 客户端
mysql-debuginfo 追踪调试mysql错误
mysql-devel 开发包
mysql-embedded 嵌入式环境报
mysql-ndb-management Cluster集群组件
mysql-server
mysql-shared 共享库
mysql-shared-compat 兼容老版本的shared的补充
mysql-test 测试包

目录结构
bin
data
include
lib
man
mysql-test
scripts      mysql初始化脚本
share        每一种错误信息的不同语言的版本
sql-bench    基准性能测试包
support-files 启动脚本 主配置文件样例等等

中心配置文件my.cnf
/etc/my.cnf
/etc/mysql/my.cnf
$MYSQL_HOME/my.cnf
/path/to/file when defaults-extra-file=/path/to/file is specified
~/.my.cnf
mysql每次重启，上面的配置文件都会读取一遍，组合起来构成mysql配置，如果重复的，最后一次被读取的就是最有效的

初始化产生6个用户，4个本地用户，::1的是ipv6地址的，两个匿名用户不安全,应该删掉
mysql 用户密码修改 3中方式
1. mysqladmin -u USERNAME -h HOSTNAME password 'NEWPASSWORD' -p
2. mysql> set password for 'USERNAME'@'HOST'=password('NEWPASSWORD')
3. mysql> update mysql.user set password=password('NEWPASSWORD') where ..comdition;

源码安装mysql
make  依赖gcc,g++环境      
cmake 依赖gcc,g++,和ncurses-devel包

make                     cmake
./configure             cmake .
./configure --help      cmake . -LH 或 ccmake .
make                    make
make install            make install

指定安装文件的安装路径是常用选项
-DCMAKE_INSTALL_PREFIX=/usr/local/mysql
-DMYSQL_DATADIR=/data/mysql
-DSYSCONFDIR=/etc
默认编译的存储引擎包括：csv,myisam,myisammrg和heap,（5.5默认不包含innodb,5.6默认就包含了）若要安装其他存储引擎，可以使用类似下列命令
-DWITH_INNOBASE_STORAGE_ENGINE=1(安装innodb) 必须要，会用到
-DWITH_ARCHIVE_STORAGE_ENGINE=1
-DWITH_BLACKHOLE_STORAGE_ENGINE=1  黑洞存储引擎
-DWITH_FEDERATED_STORAGE_ENGINE=1 5.5不支持这个引擎

若要明确指定不编译某存储引擎，可以使用
-DWITHOUT_<>_STORAGE_ENGINE=1
如
-DWITHOUT_EXAMPLE_STORAGE_ENGINE=1
-DWITHOUT_FEDERAIED_STORAGE_ENGINE=1

若要编译进其他功能，如SSL等，则可使用类似选项来实现使用或不适用某库
-DWITH_READLINE=1  用readline功能批量导入mysql数据，需要
-DWITH_SSL=system  基于ssl复制  需要
-DWITH_ZLIB=system  压缩库
-DWITH_LIBWRAP=0  访问控制，没必要用

其他常用的选项
-DMYSQL_TCP_PORT=3306  端口
-DMYSQL_UNIX_ADDR=/tmp/mysql.sock  套接字路径
-DENABLED_LOCAL_INFILE=1 是否支持local文件
-DEXTRA_CHARSETS=all  是否支持全部字符集
-DDEFAULT_CHARSET=utf8 指定默认字符集
-DDEFAULT_COLLATION=utf8_general_ci 默认字符集排序规则
-DWITH_DEBUG=0 不启用debug功能
-DENABLE_PROFILING=1 启用profiling mysql性能分析功能

字符集：
人：00100110 00101010
人：10101011 10010001
汉字：字符集  一种对应方式
gbk gb2312 utf8

排序规则
同一个字符集，排序方式也有多种

如果想清理此前编译生成的文件，需要使用
make clean
rm CMakeCACHE.txt

编译安装过程
roupadd -r mysql
useradd -g mysql -r -s /sbin/nologin mysql
mkdir DATA_DIR  (数据一般放在lvm卷上，可扩展)
chown -R mysql.mysql DATA_DIR
tar xf mysql-5.5.25a.tar.gz
cd mysql-5.5.25a
cmake . -DCMAKE_INSTALL_PREFIX=/usr/local/mysql -DMYSQL_DATADIR=DATA_DIR -DSYSCONFDIR=/etc -DWITH_INNOBASE_STORAGE_ENGINE=1 -DWITH_ARCHIVE_STORAGE_ENGINE=1 -DWITH_BLACKHOLE_STORAGE_ENGINE=1 -DWITH_READLINE=1 -DWITH_SSL=system -DWITH_ZLIB=system -DWITH_LIBWRAP=0 -DMYSQL_UNIX_ADDR=/tmp/mysql.sock -DDEFAULT_CHARSET=utf8 -DDEFAULT_COLLATION=utf8_general_ci 
make
make install
cd /usr/local/mysql
 chown -R :mysql /usr/local/mysql
 scripts/mysql_install_db --user=mysql --datadir=/data 初始化数据库
 cp support-files/my-large.cnf /etc/my.cnf   复制配置文件样例
 cp support-files/mysql.server /etc/init.d/mysqld  复制启动文件
 chkconfig --add mysqld
 chkconfig --list mysqld
 systemctl start mysqld
启动成功
为了能直接启动mysql客户端
 vim /etc/profile.d/mysql.sh
   export PATH=$PATH:/usr/local/mysql/bin
 执行一下脚本 . /etc/profile.d/mysql.sh
 路径生效   echo $PATH
mysql 链接成功
确保配置文件 /ect/my.cnf 中添加 datadir = /data 数据路径是正确的
删除匿名用户
给root用户加密码
flush privileges; 刷新

需要本地方便访问mysql，不重复输入密码，可以建立~/.my.cnf
  内容
  [client]
  user = 'root'
  password = 'centos'
  host = 'localhost'
即可

如果忘记mysql密码
 1.停掉mysqld服务
 2.my.cnf中 [mysqld]段中加入 skip-grant-tables
 3.启动mysqld服务
 4.mysql链接，重设密码，测试登录
 5.删掉skip-grant-tables，重启服务

ssl 需要openssl openssl-devel
cmake . 配置错误日志在软件包目录下CMakeFiles/ CMakeError.log   CMakeOutput.log等

mysql -->mysqld
客户端和服务端在同一台主机，通过sock
mysql -->mysql.sock -->mysqld
不在同一台主机，基于tcp/ip协议

mysql 客户端工具
  mysql 常用
  mysqldump 常用
  mysqladmin 常用
  mysqlcheck
  mysqlimport
配置文件[client] 都能对上述工具生效
客户端都支持命令
  -u USERNAME
  -p PASSWORD
  -h 主机
  --protocol {tcp|socket|pipe|memory} 指定协议 只有tcp
  --port  指定端口
非客户端工具
  myisamchk
  myisampack

show engines;  显示存储引擎

mysql 数据文件
cd /data/mysql
ls
myisam引擎，每一个表都有3个文件
  .frm 表结构定义文件
  .MYD 表存储的数据文件
  .MYI 表索引文件
innodb：
  .frm 表结构
  .ibd 表空间,表数据和索引
  .opt 存储默认字符集和排序规则
  支持所有表共享一个表空间文件，但是不太好
  建议定义每个表一个单独的表空间，默认不打开
   启用方法：
     mysql链接
     show variables like '%innodb'; 查找innodb可用选相，innodb_file_per_table复制，加入my.cnf mysqld段 innodb_file_per_table = on|1

mysql客户端使用：
musql
  --user,-u
  --host,-u
  --password,-p
  --port
  --protocol
  --database DATABASE,-D
select database(); 查看默认操作的数据库
其他选项：
   --compress 语句先压缩在返回
   --ssl-ca=/file
   --ssl-capath=/path/dir
mysql>
  交互式
  批处理模式（脚本模式）
     命令行模式下： mysql -uroot -p < init.sql(.sql 里面就是通常写的mysql语句)
     mysql客户端里面使用 source /root/init.sql或者简写 \. /root/init.sql
mysql命令有两类
  客户端命令
     \c  提前终止语句执行
     \r  重新连接至mysql服务器
     \d  指定结束符
     \g  无论语句结果是什么，直接将语句送至服务端执行
     \G  无论语句结束符是什么，直接将语句送至服务端执行，并且将结果以竖排显示
     \q 退出
     \p  显示你当前执行的命令
     \. *.sql 加载*.sql语句批处理文件
     \s 获取服务器信息
     \! shell-command 不退出mysql执行shell命令
     use或\u 使用哪个mysql作为默认操作数据库
     \W 语句执行结束后显示警告信息
     \w 不显示警告信息
     \R修改mysql > 的提示符
> 可以输入语句
-> 语句没写完或者缺少结束符
'>缺少单引号的后一半
">缺少双引号的后一半
`>缺少反引号的后一半
*/>缺少多行注释的后一半

常用技巧
 补全
   名称补全，字段补全，使用会导致链接速度慢
     -A 链接时候启用补全功能
     \# 对新建的对象支持补全功能
mysql输出格式
     mysql --html 输出为html格式
     mysql  --xml 输出xml格式     

  mysqladmin [options] command [arg] [command [arg]]...
      create DATABASE不连接创建数据库
      drop DATABSE
      ping       ping mysqld是否在线
         mysqladmin ping
         mysqladmin -uroot -h ... -p ping
       processlist 正在执行的线程列表
      status       mysql状态
         status --sleep 2 --count 2  没两秒钟显示一次，一共显示2个
       extended-status 显示状态变量，监控mysql重要手段
       variables: 显示服务器变量
       flush-privileges 让mysql重读授权表，权限表
       flush-status 重置绝多大数的服务器状态变量，重新计数
       flush-tables
       flush-threads 重置线程池
       flush-logs  作日志滚动，主要是实现二进制和中继日志滚动
       flush-hosts 
       kill 杀死一个mysql内部线程
       reload = flush privileges
       refresh = 同时执行flush-hosts和flush-logs
       shutdown 停止mysql服务器
       version 版本号，相关状态信息
       start-slave 启动从服务器的复制线程
          sql thread
          io thread
       stop-slave  关闭
mysqldump备份,mysqlimport导入,mysqlcheak
  服务器语句,要有语句结束符，默认分号，可以\d定义 \d //
     获取帮助
      help KEYWORD    help select,help create index
